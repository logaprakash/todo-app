{"ast":null,"code":"var _jsxFileName = \"/home/dataphi/todo-app/todo-react-app/src/components/app.js\";\nimport React, { Component } from 'react'; // Bootstrap for react \n\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Card from 'react-bootstrap/Card';\nimport Navbar from 'react-bootstrap/Navbar';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      bucketList: [],\n      lastBucketId: 0,\n      bucketName: '',\n      itemText: ''\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:8000/api/get_buckets').then(response => response.json()).then(data => {\n      this.setState({\n        bucketList: data\n      });\n    });\n  }\n\n  handleBucketChange(value) {\n    this.setState({\n      bucketName: value\n    });\n  }\n\n  addBucket() {\n    if (this.state.bucketName !== '') {\n      let tempLastBucketId = this.state.lastBucketId;\n      let tempBucketName = this.state.bucketName;\n      let tempList = {\n        bucket_id: tempLastBucketId + 1,\n        bucket_name: tempBucketName,\n        todoList: []\n      };\n      this.setState({\n        lastBucketId: tempLastBucketId + 1\n      });\n      this.setState({\n        bucketList: [...this.state.bucketList, tempList]\n      });\n    } else {\n      alert(\"Bucket Name is mandatory\");\n    }\n  }\n\n  addItemToBucket(bucketId) {\n    let bucketList = [];\n    let tempBucketList = this.state.bucketList;\n\n    for (let i = 0; i < tempBucketList.length; i++) {\n      if (tempBucketList[i].bucket_id === bucketId) {\n        let tempTodo = {\n          id: tempBucketList[i].todoList.length + 1,\n          text: '',\n          is_checked: false\n        };\n        tempBucketList[i].todoList = [...tempBucketList[i].todoList, tempTodo];\n      }\n\n      bucketList = [...bucketList, tempBucketList[i]];\n    }\n\n    this.setState({\n      bucketList: bucketList\n    });\n  }\n\n  deleteToDoItem(bucketId, itemId) {\n    let bucketList = [];\n    let tempBucketList = this.state.bucketList;\n\n    for (let i = 0; i < tempBucketList.length; i++) {\n      if (tempBucketList[i].bucket_id === bucketId) {\n        tempBucketList[i].todoList = tempBucketList[i].todoList.filter(function (todo) {\n          return todo.id !== itemId;\n        });\n      }\n\n      bucketList = [...bucketList, tempBucketList[i]];\n    }\n\n    this.setState({\n      bucketList: bucketList\n    });\n  }\n\n  deleteBucket(bucketId) {\n    this.setState({\n      bucketList: this.state.bucketList.filter(function (bucket) {\n        return bucket.bucket_id !== bucketId;\n      })\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Navbar, {\n      bg: \"light\",\n      expand: \"lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Navbar.Brand, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }\n    }, \"Todo List\")), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup, {\n      className: \"mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      placeholder: \"Bucket Name\",\n      id: \"add-bucket-textbox\",\n      onChange: item => this.handleBucketChange(item.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(InputGroup.Append, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      onClick: () => this.addBucket(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 29\n      }\n    }, \"Add Bucket\"))))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/dataphi/todo-app/todo-react-app/src/components/app.js"],"names":["React","Component","Container","Row","Col","Button","InputGroup","FormControl","ListGroup","Card","Navbar","App","constructor","props","state","bucketList","lastBucketId","bucketName","itemText","componentDidMount","fetch","then","response","json","data","setState","handleBucketChange","value","addBucket","tempLastBucketId","tempBucketName","tempList","bucket_id","bucket_name","todoList","alert","addItemToBucket","bucketId","tempBucketList","i","length","tempTodo","id","text","is_checked","deleteToDoItem","itemId","filter","todo","deleteBucket","bucket","render","item","target"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'; \n  \n// Bootstrap for react \nimport Container from 'react-bootstrap/Container'; \nimport Row from 'react-bootstrap/Row'; \nimport Col from 'react-bootstrap/Col'; \nimport Button from 'react-bootstrap/Button'; \nimport InputGroup from 'react-bootstrap/InputGroup'; \nimport FormControl from 'react-bootstrap/FormControl'; \nimport ListGroup from 'react-bootstrap/ListGroup'; \nimport Card from 'react-bootstrap/Card'; \nimport Navbar from 'react-bootstrap/Navbar'; \n  \nclass App extends Component  { \n    constructor(props) {\n        super(props);\n        this.state = {\n            bucketList: [],\n            lastBucketId:0,\n            bucketName:'',\n            itemText:'',\n        }  \n    }\n    componentDidMount(){\n        fetch('http://localhost:8000/api/get_buckets')\n            .then(response => response.json())\n            .then(data => {\n                    this.setState({bucketList:data})\n                }\n            );\n    }\n\n\n    handleBucketChange(value){\n        this.setState({bucketName:value})\n    }\n\n    \n    addBucket() {\n        if(this.state.bucketName !== '' ){ \n            \n            let tempLastBucketId = this.state.lastBucketId\n            let tempBucketName = this.state.bucketName\n            let tempList = {\n                bucket_id:tempLastBucketId+1,\n                bucket_name:tempBucketName,\n                todoList:[],\n            }\n            \n            this.setState({lastBucketId:tempLastBucketId+1})\n            this.setState({bucketList:[...this.state.bucketList, tempList]})\n        }else{\n            alert(\"Bucket Name is mandatory\")\n        }\n\n    }\n\n    addItemToBucket(bucketId){\n        let bucketList = []\n        let tempBucketList = this.state.bucketList\n        for (let i = 0; i < tempBucketList.length; i++) {\n            if(tempBucketList[i].bucket_id === bucketId){\n                let tempTodo = {\n                    id:tempBucketList[i].todoList.length+1,\n                    text:'',\n                    is_checked:false\n                }\n                tempBucketList[i].todoList = [...tempBucketList[i].todoList,tempTodo]\n            }\n            bucketList = [...bucketList, tempBucketList[i]]\n        } \n        this.setState({bucketList:bucketList})\n    }\n\n    \n\n    deleteToDoItem(bucketId,itemId){\n        \n        let bucketList = []\n        let tempBucketList = this.state.bucketList\n        for (let i = 0; i < tempBucketList.length; i++) {\n            if(tempBucketList[i].bucket_id === bucketId){\n                tempBucketList[i].todoList = tempBucketList[i].todoList.filter(function(todo) { \n                    return todo.id !== itemId\n                });\n            }\n            bucketList = [...bucketList, tempBucketList[i]] \n        }\n        this.setState({bucketList:bucketList})\n    }\n\n    deleteBucket(bucketId){\n        this.setState({bucketList: this.state.bucketList.filter(function(bucket) { \n            return bucket.bucket_id !== bucketId\n        })});\n    }\n\n    render(){ \n      return(\n       \n        <Container>\n            <Navbar bg=\"light\" expand=\"lg\">\n                <Navbar.Brand>Todo List</Navbar.Brand>\n            </Navbar>\n            <br></br>\n            <Row>\n                <Col>\n                    <InputGroup className=\"mb-3\">\n\n                        <FormControl\n                            placeholder=\"Bucket Name\"\n                            id=\"add-bucket-textbox\"\n                            onChange={item=>this.handleBucketChange(item.target.value)}\n                        />\n\n                        <InputGroup.Append>\n                            <Button variant=\"primary\" onClick={()=>this.addBucket()}>Add Bucket</Button>\n                        </InputGroup.Append>\n\n                    </InputGroup>\n                </Col>\n            </Row>\n            <Row>\n                {/* {this.state.bucketList.map(bucket => (\n                \n                    <Col key={bucket.bucket_id}>\n                            <Card style={{ width: '18rem' }}>\n                        \n                            <Card.Body>\n                                <Card.Title>\n                                    <Row>\n                                        <Col>\n                                            {bucket.bucket_name}\n                                        </Col> \n                                        <Col>\n                                            <Button variant=\"primary\" size=\"sm\" onClick={()=>this.addItemToBucket(bucket.bucket_id)}>+</Button> \n                                            <Button variant=\"danger\" size=\"sm\" onClick={()=>this.deleteBucket(bucket.bucket_id)}>X</Button> \n                                        </Col>\n\n                                    </Row>\n                                </Card.Title>\n                                <Card.Text>\n                                    <ListGroup key={'TODO_LIST_'+bucket.bucket_id} >\n                                        {bucket.todoList.map(todo => (\n                                            <ListGroup.Item>\n                                                <InputGroup className=\"mb-3\">\n                                                    <InputGroup.Prepend>\n                                                        <InputGroup.Checkbox/>\n                                                    </InputGroup.Prepend>\n                                                    <FormControl\n                                                        defaultValue={todo.text} \n                                                        placeholder=\"ToDo Item\"\n                                                    />\n                                                    <InputGroup.Append>\n                                                        <Button variant=\"danger\" size=\"sm\" onClick={()=>this.deleteToDoItem(bucket.bucket_id,todo.id)}>X</Button> \n                                                    </InputGroup.Append>\n                                                </InputGroup>\n                                                \n                                            </ListGroup.Item>\n                                        ))}\n                                    </ListGroup>\n                                </Card.Text>\n                            </Card.Body>\n\n                            </Card>\n                    </Col>\n\n                ))} */}\n            </Row>\n            \n        </Container>\n      ); \n    } \n  } \n    \n  export default App; "]},"metadata":{},"sourceType":"module"}