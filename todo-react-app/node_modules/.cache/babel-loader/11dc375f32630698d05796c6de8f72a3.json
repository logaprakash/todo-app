{"ast":null,"code":"var _jsxFileName = \"/home/dataphi/todo-app/todo-react-app/src/components/app.js\";\nimport React, { Component } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Card from 'react-bootstrap/Card';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Tooltip from 'react-bootstrap/Tooltip';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      bucketList: [],\n      bucketName: '',\n      itemText: ''\n    };\n    this.forceUpdateHandler = this.forceUpdateHandler.bind(this);\n  }\n\n  forceUpdateHandler() {\n    this.forceUpdate();\n  }\n\n  componentDidMount() {\n    this.reloadBuckets();\n    document.title = \"Todo App\";\n    document.body.style = 'background: red;';\n  }\n\n  reloadBuckets() {\n    fetch('http://localhost:8000/api/get_buckets').then(response => response.json()).then(data => {\n      this.setState({\n        bucketList: data\n      });\n    });\n  }\n\n  handleBucketChange(value) {\n    this.setState({\n      bucketName: value\n    });\n  }\n\n  handleTodoTextChange(bucket_id, todo_id, text) {\n    let tempBucketList = [];\n\n    for (let bucket_index = 0; bucket_index < this.state.bucketList.length; bucket_index++) {\n      let bucket = this.state.bucketList[bucket_index];\n      let todo_list = bucket.todo_list;\n\n      if (bucket.bucket_id === bucket_id) {\n        todo_list = [];\n\n        for (let todo_index = 0; todo_index < bucket.todo_list.length; todo_index++) {\n          let todo = bucket.todo_list[todo_index];\n\n          if (todo.todo_id === todo_id) {\n            todo.todo_text = text;\n          }\n\n          todo_list = [...todo_list, todo];\n        }\n      }\n\n      bucket.todo_list = todo_list;\n      tempBucketList = [...tempBucketList, bucket];\n    }\n\n    this.setState({\n      bucketList: tempBucketList\n    });\n  }\n\n  handleTodoCheckedChange(bucket_id, todo_id, is_checked) {\n    let tempBucketList = [];\n\n    for (let bucket_index = 0; bucket_index < this.state.bucketList.length; bucket_index++) {\n      let bucket = this.state.bucketList[bucket_index];\n      let todo_list = bucket.todo_list;\n\n      if (bucket.bucket_id === bucket_id) {\n        todo_list = [];\n\n        for (let todo_index = 0; todo_index < bucket.todo_list.length; todo_index++) {\n          let todo = bucket.todo_list[todo_index];\n\n          if (todo.todo_id === todo_id) {\n            todo.is_checked = is_checked;\n          }\n\n          todo_list = [...todo_list, todo];\n        }\n      }\n\n      bucket.todo_list = todo_list;\n      tempBucketList = [...tempBucketList, bucket];\n    }\n\n    this.setState({\n      bucketList: tempBucketList\n    });\n  }\n\n  addBucket() {\n    if (this.state.bucketName !== '') {\n      const body = new FormData();\n      body.append(\"bucket_name\", this.state.bucketName);\n      fetch(\"http://localhost:8000/api/insert_bucket\", {\n        body,\n        headers: {},\n        method: \"POST\"\n      }).then(response => response.json()).then(data => {\n        console.log(data);\n      });\n      window.location.reload(false);\n    } else {\n      alert(\"Bucket Name is mandatory\");\n    }\n  }\n\n  addItemToBucket(bucketId) {\n    const body = new FormData();\n    body.append(\"bucket_id\", bucketId);\n    body.append(\"todo_text\", '');\n    fetch(\"http://localhost:8000/api/insert_todo_to_bucket\", {\n      body,\n      headers: {},\n      method: \"POST\"\n    }).then(response => response.json()).then(data => {\n      console.log(data);\n    });\n    window.location.reload(false);\n  }\n\n  deleteToDoItem(todo_id) {\n    const body = new FormData();\n    body.append(\"todo_id\", todo_id);\n    fetch(\"http://localhost:8000/api/delete_todo_from_bucket\", {\n      body,\n      headers: {},\n      method: \"DELETE\"\n    }).then(response => response.json()).then(data => {\n      console.log(data);\n    });\n    window.location.reload(false);\n  }\n\n  deleteBucket(bucketId) {\n    const body = new FormData();\n    body.append(\"bucket_id\", bucketId);\n    fetch(\"http://localhost:8000/api/delete_bucket\", {\n      body,\n      headers: {},\n      method: \"DELETE\"\n    }).then(response => response.json()).then(data => {\n      console.log(data);\n    });\n    window.location.reload(false);\n  }\n\n  saveBucket(bucket_id) {\n    const body = new FormData();\n    let bucket = {};\n\n    for (let bucket_index = 0; bucket_index < this.state.bucketList.length; bucket_index++) {\n      if (this.state.bucketList[bucket_index].bucket_id === bucket_id) {\n        bucket = this.state.bucketList[bucket_index];\n        break;\n      }\n    }\n\n    body.append(\"bucket_id\", bucket.bucket_id);\n    body.append(\"todo_list\", JSON.stringify(bucket.todo_list));\n    fetch(\"http://localhost:8000/api/save_bucket\", {\n      body,\n      headers: {},\n      method: \"POST\"\n    }).then(response => response.json()).then(data => {\n      console.log(data);\n    });\n    window.location.reload(false);\n  }\n\n  render() {\n    const addBucketTooltip = props => /*#__PURE__*/React.createElement(Tooltip, Object.assign({\n      id: \"button-tooltip\"\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 13\n      }\n    }), \"Add Bucket to list\");\n\n    const addItemTooltip = props => /*#__PURE__*/React.createElement(Tooltip, Object.assign({\n      id: \"button-tooltip\"\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 13\n      }\n    }), \"Add Item to bucket\");\n\n    const RemoveItemTooltip = props => /*#__PURE__*/React.createElement(Tooltip, Object.assign({\n      id: \"button-tooltip\"\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 13\n      }\n    }), \"Remove Todo From Bucket\");\n\n    const RemoveBucketTooltip = props => /*#__PURE__*/React.createElement(Tooltip, Object.assign({\n      id: \"button-tooltip\"\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 13\n      }\n    }), \"Delete Bucket\");\n\n    const SaveBucketTooltip = props => /*#__PURE__*/React.createElement(Tooltip, Object.assign({\n      id: \"button-tooltip\"\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 13\n      }\n    }), \"Save Bucket to server\");\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Navbar, {\n      bg: \"light\",\n      expand: \"lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Navbar.Brand, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 17\n      }\n    }, \"Todo List\")), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        padding: '2rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup, {\n      className: \"mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      placeholder: \"Bucket Name\",\n      id: \"add-bucket-textbox\",\n      type: \"text\",\n      maxLength: 60,\n      onChange: item => this.handleBucketChange(item.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(InputGroup.Append, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(OverlayTrigger, {\n      placement: \"bottom\",\n      delay: {\n        show: 250,\n        hide: 400\n      },\n      overlay: addBucketTooltip,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"secondary\",\n      onClick: () => this.addBucket(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 33\n      }\n    }, \"Add Bucket\")))))), /*#__PURE__*/React.createElement(Row, {\n      style: {\n        padding: '2rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 17\n      }\n    }, this.state.bucketList.map(bucket => /*#__PURE__*/React.createElement(Col, {\n      key: bucket.bucket_id,\n      md: \"auto\",\n      style: {\n        padding: '1rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      style: {\n        width: '18rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 45\n      }\n    }, bucket.bucket_name), /*#__PURE__*/React.createElement(Col, {\n      xs: true,\n      lg: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(OverlayTrigger, {\n      placement: \"bottom\",\n      delay: {\n        show: 250,\n        hide: 400\n      },\n      overlay: addItemTooltip,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"secondary\",\n      size: \"sm\",\n      onClick: () => this.addItemToBucket(bucket.bucket_id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 53\n      }\n    }, \"+\")), /*#__PURE__*/React.createElement(OverlayTrigger, {\n      placement: \"bottom\",\n      delay: {\n        show: 250,\n        hide: 400\n      },\n      overlay: RemoveBucketTooltip,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"danger\",\n      size: \"sm\",\n      onClick: () => this.deleteBucket(bucket.bucket_id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 53\n      }\n    }, \"X\"))))), /*#__PURE__*/React.createElement(Card.Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(ListGroup, {\n      key: 'TODO_LIST_' + bucket.bucket_id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 41\n      }\n    }, bucket.todo_list.map(todo => /*#__PURE__*/React.createElement(ListGroup.Item, {\n      key: 'TODO_ITEM_' + todo.todo_id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup, {\n      className: \"mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup.Prepend, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup.Checkbox, {\n      checked: todo.is_checked,\n      onChange: item => this.handleTodoCheckedChange(bucket.bucket_id, todo.todo_id, item.target.checked),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 61\n      }\n    })), /*#__PURE__*/React.createElement(FormControl, {\n      defaultValue: todo.todo_text,\n      placeholder: \"ToDo Item\",\n      type: \"text\",\n      maxLength: 512,\n      onChange: item => this.handleTodoTextChange(bucket.bucket_id, todo.todo_id, item.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 57\n      }\n    }), /*#__PURE__*/React.createElement(InputGroup.Append, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(OverlayTrigger, {\n      placement: \"bottom\",\n      delay: {\n        show: 250,\n        hide: 400\n      },\n      overlay: RemoveItemTooltip,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"danger\",\n      size: \"sm\",\n      onClick: () => this.deleteToDoItem(todo.todo_id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 65\n      }\n    }, \"X\"))))))), /*#__PURE__*/React.createElement(Row, {\n      style: {\n        padding: \"1rem\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 74\n      }\n    }, \"Completed \", bucket.selected_count, \"/\", bucket.todo_list.length))))), /*#__PURE__*/React.createElement(OverlayTrigger, {\n      placement: \"bottom\",\n      delay: {\n        show: 250,\n        hide: 400\n      },\n      overlay: SaveBucketTooltip,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"secondary\",\n      onClick: () => this.saveBucket(bucket.bucket_id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 41\n      }\n    }, \"Save Bucket\"))))))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/dataphi/todo-app/todo-react-app/src/components/app.js"],"names":["React","Component","Row","Col","Button","InputGroup","FormControl","ListGroup","Card","Navbar","Tooltip","OverlayTrigger","App","constructor","props","state","bucketList","bucketName","itemText","forceUpdateHandler","bind","forceUpdate","componentDidMount","reloadBuckets","document","title","body","style","fetch","then","response","json","data","setState","handleBucketChange","value","handleTodoTextChange","bucket_id","todo_id","text","tempBucketList","bucket_index","length","bucket","todo_list","todo_index","todo","todo_text","handleTodoCheckedChange","is_checked","addBucket","FormData","append","headers","method","console","log","window","location","reload","alert","addItemToBucket","bucketId","deleteToDoItem","deleteBucket","saveBucket","JSON","stringify","render","addBucketTooltip","addItemTooltip","RemoveItemTooltip","RemoveBucketTooltip","SaveBucketTooltip","padding","item","target","show","hide","map","width","bucket_name","checked","selected_count"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\n  \nimport Row from 'react-bootstrap/Row'; \nimport Col from 'react-bootstrap/Col'; \nimport Button from 'react-bootstrap/Button'; \nimport InputGroup from 'react-bootstrap/InputGroup'; \nimport FormControl from 'react-bootstrap/FormControl'; \nimport ListGroup from 'react-bootstrap/ListGroup'; \nimport Card from 'react-bootstrap/Card'; \nimport Navbar from 'react-bootstrap/Navbar'; \nimport Tooltip from 'react-bootstrap/Tooltip'; \nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'; \n\n  \nclass App extends Component  { \n    constructor(props) {\n        super(props);\n        this.state = {\n            bucketList: [],\n            bucketName:'',\n            itemText:''\n        } \n        this.forceUpdateHandler = this.forceUpdateHandler.bind(this); \n\n    }\n    forceUpdateHandler(){\n        this.forceUpdate();\n    };\n      \n\n    componentDidMount(){\n        this.reloadBuckets()\n        document.title = \"Todo App\"\n        document.body.style = 'background: red;';\n    }\n\n    reloadBuckets(){\n        fetch('http://localhost:8000/api/get_buckets')\n            .then(response => response.json())\n            .then(data => {\n                    this.setState({bucketList:data})\n                }\n        );\n    }\n\n    handleBucketChange(value){\n        this.setState({bucketName:value})\n    }\n\n    handleTodoTextChange(bucket_id,todo_id,text){\n        let tempBucketList = []\n        for(let bucket_index=0;bucket_index<this.state.bucketList.length;bucket_index++){\n            let bucket = this.state.bucketList[bucket_index]\n            let todo_list = bucket.todo_list\n            if(bucket.bucket_id === bucket_id){\n                todo_list = []\n                for(let todo_index=0;todo_index<bucket.todo_list.length;todo_index++){\n                    let todo = bucket.todo_list[todo_index]\n                    if(todo.todo_id === todo_id){\n                        todo.todo_text = text\n                    }\n                    todo_list = [...todo_list,todo]\n                }\n            }\n            bucket.todo_list = todo_list\n            tempBucketList = [...tempBucketList,bucket]\n        }\n\n        this.setState({bucketList:tempBucketList})\n    }\n\n    handleTodoCheckedChange(bucket_id,todo_id,is_checked){\n        let tempBucketList = []\n        for(let bucket_index=0;bucket_index<this.state.bucketList.length;bucket_index++){\n            let bucket = this.state.bucketList[bucket_index]\n            let todo_list = bucket.todo_list\n            if(bucket.bucket_id === bucket_id){\n                todo_list = []\n                for(let todo_index=0;todo_index<bucket.todo_list.length;todo_index++){\n                    let todo = bucket.todo_list[todo_index]\n                    if(todo.todo_id === todo_id){\n                        todo.is_checked = is_checked\n                    }\n                    todo_list = [...todo_list,todo]\n                }\n            }\n            bucket.todo_list = todo_list\n            tempBucketList = [...tempBucketList,bucket]\n        }\n\n        this.setState({bucketList:tempBucketList})\n    }\n\n\n    \n    addBucket() {\n        if(this.state.bucketName !== '' ){ \n            const body = new FormData\n            body.append(\"bucket_name\", this.state.bucketName)\n\n            fetch(\"http://localhost:8000/api/insert_bucket\", {\n                body,\n                headers: {\n                   \n                },\n                method: \"POST\"\n            }).then(response => response.json())\n            .then(data => {\n                    console.log(data)\n                }\n            );\n\n            window.location.reload(false);\n            \n        }else{\n            alert(\"Bucket Name is mandatory\")\n        }\n\n    }\n\n    addItemToBucket(bucketId){\n        const body = new FormData\n        body.append(\"bucket_id\", bucketId)\n        body.append(\"todo_text\", '')\n\n        fetch(\"http://localhost:8000/api/insert_todo_to_bucket\", {\n            body,\n            headers: {},\n            method: \"POST\"\n        }).then(response => response.json())\n        .then(data => {\n                console.log(data)\n            }\n        );\n\n        window.location.reload(false);\n    }\n\n    \n\n    deleteToDoItem(todo_id){\n        \n        \n        const body = new FormData\n        body.append(\"todo_id\", todo_id)\n\n        fetch(\"http://localhost:8000/api/delete_todo_from_bucket\", {\n            body,\n            headers: {},\n            method: \"DELETE\"\n        }).then(response => response.json())\n        .then(data => {\n                console.log(data)\n            }\n        );\n\n        \n        window.location.reload(false);\n\n    }\n\n    deleteBucket(bucketId){\n\n        const body = new FormData\n        body.append(\"bucket_id\", bucketId)\n\n        fetch(\"http://localhost:8000/api/delete_bucket\", {\n            body,\n            headers: {},\n            method: \"DELETE\"\n        }).then(response => response.json())\n        .then(data => {\n                console.log(data)\n            }\n        );\n\n        \n        window.location.reload(false);\n        \n    }\n\n    saveBucket(bucket_id){\n        const body = new FormData\n        let bucket = {}\n        for(let bucket_index=0;bucket_index<this.state.bucketList.length;bucket_index++){\n            if(this.state.bucketList[bucket_index].bucket_id === bucket_id){\n                bucket = this.state.bucketList[bucket_index]\n                break\n            }\n        }\n        body.append(\"bucket_id\", bucket.bucket_id)\n        body.append(\"todo_list\", JSON.stringify(bucket.todo_list))\n\n        fetch(\"http://localhost:8000/api/save_bucket\", {\n            body,\n            headers: {},\n            method: \"POST\"\n        }).then(response => response.json())\n        .then(data => {\n                console.log(data)\n            }\n        );\n\n        window.location.reload(false);    \n    }\n\n    render(){ \n        const addBucketTooltip = (props) => (\n            <Tooltip id=\"button-tooltip\" {...props}>\n              Add Bucket to list\n            </Tooltip>\n          );\n        \n        const addItemTooltip = (props) => (\n            <Tooltip id=\"button-tooltip\" {...props}>\n                Add Item to bucket\n            </Tooltip>\n        );\n\n        const RemoveItemTooltip = (props) => (\n            <Tooltip id=\"button-tooltip\" {...props}>\n                Remove Todo From Bucket\n            </Tooltip>\n        );\n\n        const RemoveBucketTooltip = (props) => (\n            <Tooltip id=\"button-tooltip\" {...props}>\n                Delete Bucket\n            </Tooltip>\n        );\n\n        const SaveBucketTooltip = (props) => (\n            <Tooltip id=\"button-tooltip\" {...props}>\n                Save Bucket to server\n            </Tooltip>\n        );\n      return(\n       \n        <div>\n            <Navbar bg=\"light\" expand=\"lg\">\n                <Navbar.Brand>Todo List</Navbar.Brand>\n            </Navbar>\n            \n\n            <div style={{ padding: '2rem' }}>\n                \n                <Row>\n                    <Col>\n                        <InputGroup className=\"mb-3\">\n\n                            <FormControl\n                                placeholder=\"Bucket Name\"\n                                id=\"add-bucket-textbox\"\n                                type=\"text\"\n                                maxLength={60}\n                                onChange={item=>this.handleBucketChange(item.target.value)}\n                            />\n\n                            <InputGroup.Append>\n                            <OverlayTrigger\n                                placement=\"bottom\"\n                                delay={{ show: 250, hide: 400 }}\n                                overlay={addBucketTooltip}\n                            >\n                                <Button variant=\"secondary\" onClick={()=>this.addBucket()}>Add Bucket</Button>\n                            </OverlayTrigger>\n                            </InputGroup.Append>\n                            \n\n                        </InputGroup>\n                    </Col>\n                </Row>\n                \n                <Row style={{ padding: '2rem' }} >\n                    {this.state.bucketList.map(bucket => (\n                    \n                        <Col key={bucket.bucket_id} md=\"auto\" style={{ padding: '1rem' }}>\n                                <Card style={{ width: '18rem' }}>\n                            \n                                <Card.Body>\n                                    <Card.Title>\n                                        <Row>\n                                            <Col >\n                                                {bucket.bucket_name}\n                                            </Col> \n                                            <Col xs lg=\"4\">\n                                                <OverlayTrigger\n                                                    placement=\"bottom\"\n                                                    delay={{ show: 250, hide: 400 }}\n                                                    overlay={addItemTooltip}\n                                                >\n                                                    <Button variant=\"secondary\" size=\"sm\" onClick={()=>this.addItemToBucket(bucket.bucket_id)}>+</Button> \n                                                </OverlayTrigger>\n                                                <OverlayTrigger\n                                                    placement=\"bottom\"\n                                                    delay={{ show: 250, hide: 400 }}\n                                                    overlay={RemoveBucketTooltip}\n                                                >\n                                                    <Button variant=\"danger\" size=\"sm\" onClick={()=>this.deleteBucket(bucket.bucket_id)}>X</Button> \n                                                </OverlayTrigger>\n                                            </Col>\n\n                                        </Row>\n                                    </Card.Title>\n                                    <Card.Text>\n                                        <ListGroup key={'TODO_LIST_'+bucket.bucket_id} >\n                                            {bucket.todo_list.map(todo => (\n                                                <ListGroup.Item key={'TODO_ITEM_'+todo.todo_id}>\n                                                    <InputGroup className=\"mb-3\">\n                                                        <InputGroup.Prepend>\n                                                            <InputGroup.Checkbox\n                                                                checked={todo.is_checked}\n                                                                onChange={item=>this.handleTodoCheckedChange(bucket.bucket_id,todo.todo_id,item.target.checked)}\n                                                            />\n                                                        </InputGroup.Prepend>\n                                                        <FormControl\n                                                            defaultValue={todo.todo_text} \n                                                            placeholder=\"ToDo Item\"\n                                                            type=\"text\"\n                                                            maxLength={512}\n                                                            onChange={item=>this.handleTodoTextChange(bucket.bucket_id,todo.todo_id,item.target.value)}\n                                                        />\n                                                        <InputGroup.Append>\n                                                            <OverlayTrigger\n                                                                placement=\"bottom\"\n                                                                delay={{ show: 250, hide: 400 }}\n                                                                overlay={RemoveItemTooltip}\n                                                            >\n                                                                <Button variant=\"danger\" size=\"sm\" onClick={()=>this.deleteToDoItem(todo.todo_id)}>X</Button> \n                                                            </OverlayTrigger>\n                                                        </InputGroup.Append>\n                                                    </InputGroup>\n                                                    \n                                                </ListGroup.Item>\n                                            ))}\n                                        </ListGroup>\n                                        <Row style={{padding:\"1rem\"}}>\n                                            <Col className=\"text-center\"><b>Completed {bucket.selected_count}/{bucket.todo_list.length}</b></Col>\n                                        </Row>\n                                    </Card.Text>\n                                </Card.Body>\n                                    <OverlayTrigger\n                                        placement=\"bottom\"\n                                        delay={{ show: 250, hide: 400 }}\n                                        overlay={SaveBucketTooltip}\n                                    >\n                                        <Button variant=\"secondary\" onClick={()=>this.saveBucket(bucket.bucket_id)}>Save Bucket</Button>\n                                    </OverlayTrigger>\n                                </Card>\n                        </Col>\n\n                    ))}\n                </Row>\n\n            </div>\n            \n        </div>\n\n      ); \n    } \n  } \n    \n  export default App; "]},"metadata":{},"sourceType":"module"}