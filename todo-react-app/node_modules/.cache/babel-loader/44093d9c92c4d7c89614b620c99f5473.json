{"ast":null,"code":"var _jsxFileName = \"/home/dataphi/todo-app/todo-react-app/src/components/app.js\";\nimport React, { Component } from 'react'; // Bootstrap for react \n\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Card from 'react-bootstrap/Card';\nimport Navbar from 'react-bootstrap/Navbar';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      bucketList: [],\n      bucketName: '',\n      itemText: ''\n    };\n    this.forceUpdateHandler = this.forceUpdateHandler.bind(this);\n  }\n\n  forceUpdateHandler() {\n    this.forceUpdate();\n  }\n\n  componentDidMount() {\n    this.reloadBuckets(0);\n  }\n\n  reloadBuckets() {\n    fetch('http://localhost:8000/api/get_buckets').then(response => response.json()).then(data => {\n      this.setState({\n        bucketList: data\n      });\n    });\n  }\n\n  handleBucketChange(value) {\n    this.setState({\n      bucketName: value\n    });\n  }\n\n  handleTodoTextChange(bucket_id, todo_id, text) {\n    let tempBucketList = [];\n\n    for (let bucket_index = 0; bucket_index < this.state.bucketList.length; bucket_index++) {\n      bucket = this.state.bucketList[bucket_index];\n\n      if (bucket.bucket_id === bucket_id) {\n        for (let todo_index = 0; todo_index < bucket.todo_list.length; todo_index++) {\n          if (this.state.bucketList[bucket_index].todo_list[todo_index] === todo_id) {}\n        }\n      }\n    }\n\n    this.setState({\n      bucketName: value\n    });\n  }\n\n  addBucket() {\n    if (this.state.bucketName !== '') {\n      const body = new FormData();\n      body.append(\"bucket_name\", this.state.bucketName);\n      fetch(\"http://localhost:8000/api/insert_bucket\", {\n        body,\n        headers: {},\n        method: \"POST\"\n      }).then(response => response.json()).then(data => {\n        console.log(data);\n      });\n      this.reloadBuckets();\n      this.forceUpdateHandler();\n    } else {\n      alert(\"Bucket Name is mandatory\");\n    }\n  }\n\n  addItemToBucket(bucketId) {\n    const body = new FormData();\n    body.append(\"bucket_id\", bucketId);\n    body.append(\"todo_text\", '');\n    fetch(\"http://localhost:8000/api/insert_todo_to_bucket\", {\n      body,\n      headers: {},\n      method: \"POST\"\n    }).then(response => response.json()).then(data => {\n      console.log(data);\n    });\n    this.reloadBuckets();\n    this.forceUpdateHandler();\n  }\n\n  deleteToDoItem(bucketId, itemId) {\n    let bucketList = [];\n    let tempBucketList = this.state.bucketList;\n\n    for (let i = 0; i < tempBucketList.length; i++) {\n      if (tempBucketList[i].bucket_id === bucketId) {\n        tempBucketList[i].todoList = tempBucketList[i].todoList.filter(function (todo) {\n          return todo.id !== itemId;\n        });\n      }\n\n      bucketList = [...bucketList, tempBucketList[i]];\n    }\n\n    this.setState({\n      bucketList: bucketList\n    });\n  }\n\n  deleteBucket(bucketId) {\n    const body = new FormData();\n    body.append(\"bucket_id\", bucketId);\n    fetch(\"http://localhost:8000/api/delete_bucket\", {\n      body,\n      headers: {},\n      method: \"DELETE\"\n    }).then(response => response.json()).then(data => {\n      console.log(data);\n    });\n    this.reloadBuckets();\n    this.forceUpdateHandler();\n  }\n\n  saveBucket(bucketId) {\n    const body = new FormData();\n    body.append(\"bucket_id\", bucketId);\n    fetch(\"http://localhost:8000/api/delete_bucket\", {\n      body,\n      headers: {},\n      method: \"DELETE\"\n    }).then(response => response.json()).then(data => {\n      console.log(data);\n    });\n    this.reloadBuckets();\n    this.forceUpdateHandler();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Navbar, {\n      bg: \"light\",\n      expand: \"lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Navbar.Brand, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }\n    }, \"Todo List\")), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup, {\n      className: \"mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      placeholder: \"Bucket Name\",\n      id: \"add-bucket-textbox\",\n      onChange: item => this.handleBucketChange(item.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(InputGroup.Append, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      onClick: () => this.addBucket(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 29\n      }\n    }, \"Add Bucket\"))))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 13\n      }\n    }, this.state.bucketList.map(bucket => /*#__PURE__*/React.createElement(Col, {\n      key: bucket.bucket_id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      style: {\n        width: '18rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 41\n      }\n    }, bucket.bucket_name), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      size: \"sm\",\n      onClick: () => this.addItemToBucket(bucket.bucket_id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 45\n      }\n    }, \"+\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"danger\",\n      size: \"sm\",\n      onClick: () => this.deleteBucket(bucket.bucket_id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 45\n      }\n    }, \"X\")))), /*#__PURE__*/React.createElement(Card.Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(ListGroup, {\n      key: 'TODO_LIST_' + bucket.bucket_id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 37\n      }\n    }, bucket.todo_list.map(todo => /*#__PURE__*/React.createElement(ListGroup.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup, {\n      className: \"mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup.Prepend, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup.Checkbox, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 57\n      }\n    })), /*#__PURE__*/React.createElement(FormControl, {\n      defaultValue: todo.text,\n      placeholder: \"ToDo Item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 53\n      }\n    }), /*#__PURE__*/React.createElement(InputGroup.Append, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"danger\",\n      size: \"sm\",\n      onClick: () => this.deleteToDoItem(bucket.bucket_id, todo.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 57\n      }\n    }, \"X\")))))))), /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 33\n      }\n    }, \"Save Bucket\"))))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/dataphi/todo-app/todo-react-app/src/components/app.js"],"names":["React","Component","Container","Row","Col","Button","InputGroup","FormControl","ListGroup","Card","Navbar","App","constructor","props","state","bucketList","bucketName","itemText","forceUpdateHandler","bind","forceUpdate","componentDidMount","reloadBuckets","fetch","then","response","json","data","setState","handleBucketChange","value","handleTodoTextChange","bucket_id","todo_id","text","tempBucketList","bucket_index","length","bucket","todo_index","todo_list","addBucket","body","FormData","append","headers","method","console","log","alert","addItemToBucket","bucketId","deleteToDoItem","itemId","i","todoList","filter","todo","id","deleteBucket","saveBucket","render","item","target","map","width","bucket_name"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'; \n  \n// Bootstrap for react \nimport Container from 'react-bootstrap/Container'; \nimport Row from 'react-bootstrap/Row'; \nimport Col from 'react-bootstrap/Col'; \nimport Button from 'react-bootstrap/Button'; \nimport InputGroup from 'react-bootstrap/InputGroup'; \nimport FormControl from 'react-bootstrap/FormControl'; \nimport ListGroup from 'react-bootstrap/ListGroup'; \nimport Card from 'react-bootstrap/Card'; \nimport Navbar from 'react-bootstrap/Navbar'; \n  \nclass App extends Component  { \n    constructor(props) {\n        super(props);\n        this.state = {\n            bucketList: [],\n            bucketName:'',\n            itemText:'',\n        } \n        this.forceUpdateHandler = this.forceUpdateHandler.bind(this); \n    }\n    forceUpdateHandler(){\n        this.forceUpdate();\n    };\n      \n\n    componentDidMount(){\n        this.reloadBuckets(0)\n    }\n\n    reloadBuckets(){\n        fetch('http://localhost:8000/api/get_buckets')\n            .then(response => response.json())\n            .then(data => {\n                    this.setState({bucketList:data})\n                }\n        );\n        \n    }\n\n    handleBucketChange(value){\n        this.setState({bucketName:value})\n    }\n\n    handleTodoTextChange(bucket_id,todo_id,text){\n        let tempBucketList = []\n        for(let bucket_index=0;bucket_index<this.state.bucketList.length;bucket_index++){\n            bucket = this.state.bucketList[bucket_index]\n            if(bucket.bucket_id === bucket_id){\n                for(let todo_index=0;todo_index<bucket.todo_list.length;todo_index++){\n                    if(this.state.bucketList[bucket_index].todo_list[todo_index] === todo_id){\n\n                    }\n                }\n            }\n        }\n        this.setState({bucketName:value})\n    }\n\n    \n    addBucket() {\n        if(this.state.bucketName !== '' ){ \n            const body = new FormData\n            body.append(\"bucket_name\", this.state.bucketName)\n\n            fetch(\"http://localhost:8000/api/insert_bucket\", {\n                body,\n                headers: {\n                   \n                },\n                method: \"POST\"\n            }).then(response => response.json())\n            .then(data => {\n                    console.log(data)\n                }\n            );\n\n            this.reloadBuckets()\n            this.forceUpdateHandler()\n            \n        }else{\n            alert(\"Bucket Name is mandatory\")\n        }\n\n    }\n\n    addItemToBucket(bucketId){\n        const body = new FormData\n        body.append(\"bucket_id\", bucketId)\n        body.append(\"todo_text\", '')\n\n        fetch(\"http://localhost:8000/api/insert_todo_to_bucket\", {\n            body,\n            headers: {},\n            method: \"POST\"\n        }).then(response => response.json())\n        .then(data => {\n                console.log(data)\n            }\n        );\n\n        this.reloadBuckets()\n        this.forceUpdateHandler()\n    }\n\n    \n\n    deleteToDoItem(bucketId,itemId){\n        \n        let bucketList = []\n        let tempBucketList = this.state.bucketList\n        for (let i = 0; i < tempBucketList.length; i++) {\n            if(tempBucketList[i].bucket_id === bucketId){\n                tempBucketList[i].todoList = tempBucketList[i].todoList.filter(function(todo) { \n                    return todo.id !== itemId\n                });\n            }\n            bucketList = [...bucketList, tempBucketList[i]] \n        }\n        this.setState({bucketList:bucketList})\n        \n        \n\n    }\n\n    deleteBucket(bucketId){\n\n        const body = new FormData\n        body.append(\"bucket_id\", bucketId)\n\n        fetch(\"http://localhost:8000/api/delete_bucket\", {\n            body,\n            headers: {},\n            method: \"DELETE\"\n        }).then(response => response.json())\n        .then(data => {\n                console.log(data)\n            }\n        );\n\n        \n        this.reloadBuckets()\n        this.forceUpdateHandler()\n        \n    }\n\n    saveBucket(bucketId){\n        \n        const body = new FormData\n        body.append(\"bucket_id\", bucketId)\n\n        fetch(\"http://localhost:8000/api/delete_bucket\", {\n            body,\n            headers: {},\n            method: \"DELETE\"\n        }).then(response => response.json())\n        .then(data => {\n                console.log(data)\n            }\n        );\n\n        \n        this.reloadBuckets()\n        this.forceUpdateHandler()\n        \n    }\n\n    render(){ \n      return(\n       \n        <Container>\n            <Navbar bg=\"light\" expand=\"lg\">\n                <Navbar.Brand>Todo List</Navbar.Brand>\n            </Navbar>\n            <br></br>\n            <Row>\n                <Col>\n                    <InputGroup className=\"mb-3\">\n\n                        <FormControl\n                            placeholder=\"Bucket Name\"\n                            id=\"add-bucket-textbox\"\n                            onChange={item=>this.handleBucketChange(item.target.value)}\n                        />\n\n                        <InputGroup.Append>\n                            <Button variant=\"primary\" onClick={()=>this.addBucket()}>Add Bucket</Button>\n                        </InputGroup.Append>\n\n                    </InputGroup>\n                </Col>\n            </Row>\n            <Row>\n                {this.state.bucketList.map(bucket => (\n                \n                    <Col key={bucket.bucket_id}>\n                            <Card style={{ width: '18rem' }}>\n                        \n                            <Card.Body>\n                                <Card.Title>\n                                    <Row>\n                                        <Col>\n                                            {bucket.bucket_name}\n                                        </Col> \n                                        <Col>\n                                            <Button variant=\"primary\" size=\"sm\" onClick={()=>this.addItemToBucket(bucket.bucket_id)}>+</Button> \n                                            <Button variant=\"danger\" size=\"sm\" onClick={()=>this.deleteBucket(bucket.bucket_id)}>X</Button> \n                                        </Col>\n\n                                    </Row>\n                                </Card.Title>\n                                <Card.Text>\n                                    <ListGroup key={'TODO_LIST_'+bucket.bucket_id} >\n                                        {bucket.todo_list.map(todo => (\n                                            <ListGroup.Item>\n                                                <InputGroup className=\"mb-3\">\n                                                    <InputGroup.Prepend>\n                                                        <InputGroup.Checkbox/>\n                                                    </InputGroup.Prepend>\n                                                    <FormControl\n                                                        defaultValue={todo.text} \n                                                        placeholder=\"ToDo Item\"\n                                                    />\n                                                    <InputGroup.Append>\n                                                        <Button variant=\"danger\" size=\"sm\" onClick={()=>this.deleteToDoItem(bucket.bucket_id,todo.id)}>X</Button> \n                                                    </InputGroup.Append>\n                                                </InputGroup>\n                                                \n                                            </ListGroup.Item>\n                                        ))}\n                                    </ListGroup>\n                                </Card.Text>\n                            </Card.Body>\n                                <Button variant=\"primary\">Save Bucket</Button>\n                            </Card>\n                    </Col>\n\n                ))}\n            </Row>\n            \n        </Container>\n      ); \n    } \n  } \n    \n  export default App; "]},"metadata":{},"sourceType":"module"}