{"ast":null,"code":"var _jsxFileName = \"/home/dataphi/todo-app/todo-react-app/src/components/app.js\";\nimport React, { Component } from 'react'; // Bootstrap for react \n\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Card from 'react-bootstrap/Card';\nimport Navbar from 'react-bootstrap/Navbar';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      bucketList: [],\n      bucketName: '',\n      itemText: ''\n    };\n  }\n\n  componentDidMount() {\n    this.reloadBuckets(0);\n  }\n\n  reloadBuckets() {\n    fetch('http://localhost:8000/api/get_buckets').then(response => response.json()).then(data => {\n      this.setState({\n        bucketList: data\n      });\n    });\n  }\n\n  handleBucketChange(value) {\n    this.setState({\n      bucketName: value\n    });\n  }\n\n  addBucket() {\n    if (this.state.bucketName !== '') {\n      var bodyFormData = new FormData();\n      bodyFormData.append('bucket_name', tempBucketName);\n      let tempBucketName = this.state.bucketName;\n      fetch('http://localhost:8000/api/insert_bucket', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: bodyFormData\n      }).then(response => response.json()).then(data => {\n        console.log(data);\n      });\n      this.reloadBuckets();\n    } else {\n      alert(\"Bucket Name is mandatory\");\n    }\n  }\n\n  addItemToBucket(bucketId) {\n    let bucketList = [];\n    let tempBucketList = this.state.bucketList;\n\n    for (let i = 0; i < tempBucketList.length; i++) {\n      if (tempBucketList[i].bucket_id === bucketId) {\n        let tempTodo = {\n          id: tempBucketList[i].todoList.length + 1,\n          text: '',\n          is_checked: false\n        };\n        tempBucketList[i].todoList = [...tempBucketList[i].todoList, tempTodo];\n      }\n\n      bucketList = [...bucketList, tempBucketList[i]];\n    }\n\n    this.setState({\n      bucketList: bucketList\n    });\n  }\n\n  deleteToDoItem(bucketId, itemId) {\n    let bucketList = [];\n    let tempBucketList = this.state.bucketList;\n\n    for (let i = 0; i < tempBucketList.length; i++) {\n      if (tempBucketList[i].bucket_id === bucketId) {\n        tempBucketList[i].todoList = tempBucketList[i].todoList.filter(function (todo) {\n          return todo.id !== itemId;\n        });\n      }\n\n      bucketList = [...bucketList, tempBucketList[i]];\n    }\n\n    this.setState({\n      bucketList: bucketList\n    });\n  }\n\n  deleteBucket(bucketId) {\n    this.setState({\n      bucketList: this.state.bucketList.filter(function (bucket) {\n        return bucket.bucket_id !== bucketId;\n      })\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Navbar, {\n      bg: \"light\",\n      expand: \"lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Navbar.Brand, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }\n    }, \"Todo List\")), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup, {\n      className: \"mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      placeholder: \"Bucket Name\",\n      id: \"add-bucket-textbox\",\n      onChange: item => this.handleBucketChange(item.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(InputGroup.Append, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      onClick: () => this.addBucket(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 29\n      }\n    }, \"Add Bucket\"))))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }\n    }, this.state.bucketList.map(bucket => /*#__PURE__*/React.createElement(Col, {\n      key: bucket.bucket_id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      style: {\n        width: '18rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 41\n      }\n    }, bucket.bucket_name), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      size: \"sm\",\n      onClick: () => this.addItemToBucket(bucket.bucket_id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 45\n      }\n    }, \"+\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"danger\",\n      size: \"sm\",\n      onClick: () => this.deleteBucket(bucket.bucket_id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 45\n      }\n    }, \"X\")))), /*#__PURE__*/React.createElement(Card.Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(ListGroup, {\n      key: 'TODO_LIST_' + bucket.bucket_id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 37\n      }\n    }, bucket.todo_list.map(todo => /*#__PURE__*/React.createElement(ListGroup.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup, {\n      className: \"mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup.Prepend, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup.Checkbox, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 57\n      }\n    })), /*#__PURE__*/React.createElement(FormControl, {\n      defaultValue: todo.text,\n      placeholder: \"ToDo Item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 53\n      }\n    }), /*#__PURE__*/React.createElement(InputGroup.Append, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"danger\",\n      size: \"sm\",\n      onClick: () => this.deleteToDoItem(bucket.bucket_id, todo.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 57\n      }\n    }, \"X\")))))))))))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/dataphi/todo-app/todo-react-app/src/components/app.js"],"names":["React","Component","Container","Row","Col","Button","InputGroup","FormControl","ListGroup","Card","Navbar","App","constructor","props","state","bucketList","bucketName","itemText","componentDidMount","reloadBuckets","fetch","then","response","json","data","setState","handleBucketChange","value","addBucket","bodyFormData","FormData","append","tempBucketName","method","headers","body","console","log","alert","addItemToBucket","bucketId","tempBucketList","i","length","bucket_id","tempTodo","id","todoList","text","is_checked","deleteToDoItem","itemId","filter","todo","deleteBucket","bucket","render","item","target","map","width","bucket_name","todo_list"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B,C,CAEA;;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;;AAEA,MAAMC,GAAN,SAAkBV,SAAlB,CAA6B;AACzBW,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,UAAU,EAAE,EADH;AAETC,MAAAA,UAAU,EAAC,EAFF;AAGTC,MAAAA,QAAQ,EAAC;AAHA,KAAb;AAKH;;AAEDC,EAAAA,iBAAiB,GAAE;AACf,SAAKC,aAAL,CAAmB,CAAnB;AACH;;AAEDA,EAAAA,aAAa,GAAE;AACXC,IAAAA,KAAK,CAAC,uCAAD,CAAL,CACKC,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUG,IAAI,IAAI;AACN,WAAKC,QAAL,CAAc;AAACV,QAAAA,UAAU,EAACS;AAAZ,OAAd;AACH,KAJT;AAMH;;AAEDE,EAAAA,kBAAkB,CAACC,KAAD,EAAO;AACrB,SAAKF,QAAL,CAAc;AAACT,MAAAA,UAAU,EAACW;AAAZ,KAAd;AACH;;AAGDC,EAAAA,SAAS,GAAG;AACR,QAAG,KAAKd,KAAL,CAAWE,UAAX,KAA0B,EAA7B,EAAiC;AAC7B,UAAIa,YAAY,GAAG,IAAIC,QAAJ,EAAnB;AACAD,MAAAA,YAAY,CAACE,MAAb,CAAoB,aAApB,EAAkCC,cAAlC;AACA,UAAIA,cAAc,GAAG,KAAKlB,KAAL,CAAWE,UAAhC;AACAI,MAAAA,KAAK,CAAC,yCAAD,EAA4C;AAC7Ca,QAAAA,MAAM,EAAE,MADqC;AAE7CC,QAAAA,OAAO,EAAE;AACL,oBAAU,kBADL;AAEL,0BAAgB;AAFX,SAFoC;AAM7CC,QAAAA,IAAI,EAAEN;AANuC,OAA5C,CAAL,CAOGR,IAPH,CAOQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAPpB,EAQCF,IARD,CAQMG,IAAI,IAAI;AACNY,QAAAA,OAAO,CAACC,GAAR,CAAYb,IAAZ;AACH,OAVL;AAaA,WAAKL,aAAL;AACH,KAlBD,MAkBK;AACDmB,MAAAA,KAAK,CAAC,0BAAD,CAAL;AACH;AAEJ;;AAEDC,EAAAA,eAAe,CAACC,QAAD,EAAU;AACrB,QAAIzB,UAAU,GAAG,EAAjB;AACA,QAAI0B,cAAc,GAAG,KAAK3B,KAAL,CAAWC,UAAhC;;AACA,SAAK,IAAI2B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,cAAc,CAACE,MAAnC,EAA2CD,CAAC,EAA5C,EAAgD;AAC5C,UAAGD,cAAc,CAACC,CAAD,CAAd,CAAkBE,SAAlB,KAAgCJ,QAAnC,EAA4C;AACxC,YAAIK,QAAQ,GAAG;AACXC,UAAAA,EAAE,EAACL,cAAc,CAACC,CAAD,CAAd,CAAkBK,QAAlB,CAA2BJ,MAA3B,GAAkC,CAD1B;AAEXK,UAAAA,IAAI,EAAC,EAFM;AAGXC,UAAAA,UAAU,EAAC;AAHA,SAAf;AAKAR,QAAAA,cAAc,CAACC,CAAD,CAAd,CAAkBK,QAAlB,GAA6B,CAAC,GAAGN,cAAc,CAACC,CAAD,CAAd,CAAkBK,QAAtB,EAA+BF,QAA/B,CAA7B;AACH;;AACD9B,MAAAA,UAAU,GAAG,CAAC,GAAGA,UAAJ,EAAgB0B,cAAc,CAACC,CAAD,CAA9B,CAAb;AACH;;AACD,SAAKjB,QAAL,CAAc;AAACV,MAAAA,UAAU,EAACA;AAAZ,KAAd;AACH;;AAIDmC,EAAAA,cAAc,CAACV,QAAD,EAAUW,MAAV,EAAiB;AAE3B,QAAIpC,UAAU,GAAG,EAAjB;AACA,QAAI0B,cAAc,GAAG,KAAK3B,KAAL,CAAWC,UAAhC;;AACA,SAAK,IAAI2B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,cAAc,CAACE,MAAnC,EAA2CD,CAAC,EAA5C,EAAgD;AAC5C,UAAGD,cAAc,CAACC,CAAD,CAAd,CAAkBE,SAAlB,KAAgCJ,QAAnC,EAA4C;AACxCC,QAAAA,cAAc,CAACC,CAAD,CAAd,CAAkBK,QAAlB,GAA6BN,cAAc,CAACC,CAAD,CAAd,CAAkBK,QAAlB,CAA2BK,MAA3B,CAAkC,UAASC,IAAT,EAAe;AAC1E,iBAAOA,IAAI,CAACP,EAAL,KAAYK,MAAnB;AACH,SAF4B,CAA7B;AAGH;;AACDpC,MAAAA,UAAU,GAAG,CAAC,GAAGA,UAAJ,EAAgB0B,cAAc,CAACC,CAAD,CAA9B,CAAb;AACH;;AACD,SAAKjB,QAAL,CAAc;AAACV,MAAAA,UAAU,EAACA;AAAZ,KAAd;AACH;;AAEDuC,EAAAA,YAAY,CAACd,QAAD,EAAU;AAClB,SAAKf,QAAL,CAAc;AAACV,MAAAA,UAAU,EAAE,KAAKD,KAAL,CAAWC,UAAX,CAAsBqC,MAAtB,CAA6B,UAASG,MAAT,EAAiB;AACrE,eAAOA,MAAM,CAACX,SAAP,KAAqBJ,QAA5B;AACH,OAF0B;AAAb,KAAd;AAGH;;AAEDgB,EAAAA,MAAM,GAAE;AACN,wBAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAQ,MAAA,EAAE,EAAC,OAAX;AAAmB,MAAA,MAAM,EAAC,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD,CAAQ,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,CADJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,eAKI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,UAAD;AAAY,MAAA,SAAS,EAAC,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI,oBAAC,WAAD;AACI,MAAA,WAAW,EAAC,aADhB;AAEI,MAAA,EAAE,EAAC,oBAFP;AAGI,MAAA,QAAQ,EAAEC,IAAI,IAAE,KAAK/B,kBAAL,CAAwB+B,IAAI,CAACC,MAAL,CAAY/B,KAApC,CAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAQI,oBAAC,UAAD,CAAY,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,SAAhB;AAA0B,MAAA,OAAO,EAAE,MAAI,KAAKC,SAAL,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,CARJ,CADJ,CADJ,CALJ,eAsBI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKd,KAAL,CAAWC,UAAX,CAAsB4C,GAAtB,CAA0BJ,MAAM,iBAE7B,oBAAC,GAAD;AAAK,MAAA,GAAG,EAAEA,MAAM,CAACX,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACQ,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEgB,QAAAA,KAAK,EAAE;AAAT,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEA,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKL,MAAM,CAACM,WADZ,CADJ,eAII,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,SAAhB;AAA0B,MAAA,IAAI,EAAC,IAA/B;AAAoC,MAAA,OAAO,EAAE,MAAI,KAAKtB,eAAL,CAAqBgB,MAAM,CAACX,SAA5B,CAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ,eAEI,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,QAAhB;AAAyB,MAAA,IAAI,EAAC,IAA9B;AAAmC,MAAA,OAAO,EAAE,MAAI,KAAKU,YAAL,CAAkBC,MAAM,CAACX,SAAzB,CAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFJ,CAJJ,CADJ,CADJ,eAaI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,SAAD;AAAW,MAAA,GAAG,EAAE,eAAaW,MAAM,CAACX,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKW,MAAM,CAACO,SAAP,CAAiBH,GAAjB,CAAqBN,IAAI,iBACtB,oBAAC,SAAD,CAAW,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,UAAD;AAAY,MAAA,SAAS,EAAC,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,UAAD,CAAY,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,UAAD,CAAY,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,eAII,oBAAC,WAAD;AACI,MAAA,YAAY,EAAEA,IAAI,CAACL,IADvB;AAEI,MAAA,WAAW,EAAC,WAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,eAQI,oBAAC,UAAD,CAAY,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,QAAhB;AAAyB,MAAA,IAAI,EAAC,IAA9B;AAAmC,MAAA,OAAO,EAAE,MAAI,KAAKE,cAAL,CAAoBK,MAAM,CAACX,SAA3B,EAAqCS,IAAI,CAACP,EAA1C,CAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ,CARJ,CADJ,CADH,CADL,CADJ,CAbJ,CAFA,CADR,CAFH,CADL,CAtBJ,CAFF;AA0ED;;AAxKwB;;AA2K3B,eAAenC,GAAf","sourcesContent":["import React, {Component} from 'react'; \n  \n// Bootstrap for react \nimport Container from 'react-bootstrap/Container'; \nimport Row from 'react-bootstrap/Row'; \nimport Col from 'react-bootstrap/Col'; \nimport Button from 'react-bootstrap/Button'; \nimport InputGroup from 'react-bootstrap/InputGroup'; \nimport FormControl from 'react-bootstrap/FormControl'; \nimport ListGroup from 'react-bootstrap/ListGroup'; \nimport Card from 'react-bootstrap/Card'; \nimport Navbar from 'react-bootstrap/Navbar'; \n  \nclass App extends Component  { \n    constructor(props) {\n        super(props);\n        this.state = {\n            bucketList: [],\n            bucketName:'',\n            itemText:'',\n        }  \n    }\n\n    componentDidMount(){\n        this.reloadBuckets(0)\n    }\n\n    reloadBuckets(){\n        fetch('http://localhost:8000/api/get_buckets')\n            .then(response => response.json())\n            .then(data => {\n                    this.setState({bucketList:data})\n                }\n        );\n    }\n\n    handleBucketChange(value){\n        this.setState({bucketName:value})\n    }\n\n    \n    addBucket() {\n        if(this.state.bucketName !== '' ){ \n            var bodyFormData = new FormData();\n            bodyFormData.append('bucket_name',tempBucketName)\n            let tempBucketName = this.state.bucketName\n            fetch('http://localhost:8000/api/insert_bucket', {\n                method: 'POST',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                },\n                body: bodyFormData\n            }).then(response => response.json())\n            .then(data => {\n                    console.log(data)\n                }\n            );\n            \n            this.reloadBuckets()\n        }else{\n            alert(\"Bucket Name is mandatory\")\n        }\n\n    }\n\n    addItemToBucket(bucketId){\n        let bucketList = []\n        let tempBucketList = this.state.bucketList\n        for (let i = 0; i < tempBucketList.length; i++) {\n            if(tempBucketList[i].bucket_id === bucketId){\n                let tempTodo = {\n                    id:tempBucketList[i].todoList.length+1,\n                    text:'',\n                    is_checked:false\n                }\n                tempBucketList[i].todoList = [...tempBucketList[i].todoList,tempTodo]\n            }\n            bucketList = [...bucketList, tempBucketList[i]]\n        } \n        this.setState({bucketList:bucketList})\n    }\n\n    \n\n    deleteToDoItem(bucketId,itemId){\n        \n        let bucketList = []\n        let tempBucketList = this.state.bucketList\n        for (let i = 0; i < tempBucketList.length; i++) {\n            if(tempBucketList[i].bucket_id === bucketId){\n                tempBucketList[i].todoList = tempBucketList[i].todoList.filter(function(todo) { \n                    return todo.id !== itemId\n                });\n            }\n            bucketList = [...bucketList, tempBucketList[i]] \n        }\n        this.setState({bucketList:bucketList})\n    }\n\n    deleteBucket(bucketId){\n        this.setState({bucketList: this.state.bucketList.filter(function(bucket) { \n            return bucket.bucket_id !== bucketId\n        })});\n    }\n\n    render(){ \n      return(\n       \n        <Container>\n            <Navbar bg=\"light\" expand=\"lg\">\n                <Navbar.Brand>Todo List</Navbar.Brand>\n            </Navbar>\n            <br></br>\n            <Row>\n                <Col>\n                    <InputGroup className=\"mb-3\">\n\n                        <FormControl\n                            placeholder=\"Bucket Name\"\n                            id=\"add-bucket-textbox\"\n                            onChange={item=>this.handleBucketChange(item.target.value)}\n                        />\n\n                        <InputGroup.Append>\n                            <Button variant=\"primary\" onClick={()=>this.addBucket()}>Add Bucket</Button>\n                        </InputGroup.Append>\n\n                    </InputGroup>\n                </Col>\n            </Row>\n            <Row>\n                {this.state.bucketList.map(bucket => (\n                \n                    <Col key={bucket.bucket_id}>\n                            <Card style={{ width: '18rem' }}>\n                        \n                            <Card.Body>\n                                <Card.Title>\n                                    <Row>\n                                        <Col>\n                                            {bucket.bucket_name}\n                                        </Col> \n                                        <Col>\n                                            <Button variant=\"primary\" size=\"sm\" onClick={()=>this.addItemToBucket(bucket.bucket_id)}>+</Button> \n                                            <Button variant=\"danger\" size=\"sm\" onClick={()=>this.deleteBucket(bucket.bucket_id)}>X</Button> \n                                        </Col>\n\n                                    </Row>\n                                </Card.Title>\n                                <Card.Text>\n                                    <ListGroup key={'TODO_LIST_'+bucket.bucket_id} >\n                                        {bucket.todo_list.map(todo => (\n                                            <ListGroup.Item>\n                                                <InputGroup className=\"mb-3\">\n                                                    <InputGroup.Prepend>\n                                                        <InputGroup.Checkbox/>\n                                                    </InputGroup.Prepend>\n                                                    <FormControl\n                                                        defaultValue={todo.text} \n                                                        placeholder=\"ToDo Item\"\n                                                    />\n                                                    <InputGroup.Append>\n                                                        <Button variant=\"danger\" size=\"sm\" onClick={()=>this.deleteToDoItem(bucket.bucket_id,todo.id)}>X</Button> \n                                                    </InputGroup.Append>\n                                                </InputGroup>\n                                                \n                                            </ListGroup.Item>\n                                        ))}\n                                    </ListGroup>\n                                </Card.Text>\n                            </Card.Body>\n\n                            </Card>\n                    </Col>\n\n                ))}\n            </Row>\n            \n        </Container>\n      ); \n    } \n  } \n    \n  export default App; "]},"metadata":{},"sourceType":"module"}